name: CI Solución (Playwright + Cucumber)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      test_env:
        description: "Valor para TEST_ENV (local/dev/cert/prod)"
        required: true
        default: "cert"
        type: choice
        options: [ "local", "dev", "cert", "prod" ]
      cucumber_tags:
        description: 'Tags Cucumber (ej: "@humo")'
        required: false
        default: ""
        type: string

permissions:
  contents: read
  packages: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium]   # Agrega 'firefox' si lo deseas
    defaults:
      run:
        working-directory: ./src

    env:
      CI: true
      TEST_ENV: ${{ inputs.test_env || 'cert' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://npm.pkg.github.com
          scope: '@juanpbrivera'
          always-auth: true
          cache: npm
          cache-dependency-path: ./src/package-lock.json

      # Forzamos .npmrc en el workspace para que npm use el registry y el token
      - name: Configure npm for GitHub Packages (project-level)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "@juanpbrivera:registry=https://npm.pkg.github.com" > .npmrc
          echo "always-auth=true" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" >> .npmrc

      # Diagnóstico opcional (si falla aquí, la auth al registry no está bien)
      - name: npm whoami (diagnóstico)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm whoami --registry=https://npm.pkg.github.com

      - name: Install deps
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm ci


      # Descubre la versión exacta de @playwright/test para versionar el cache
      - name: Read Playwright version
        id: pw
        run: echo "version=$(node -e \"console.log(require('@playwright/test/package.json').version)\")" >> $GITHUB_OUTPUT

      # Cachea navegadores por SO + versión de Playwright + browser del job
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-ms-playwright-${{ steps.pw.outputs.version }}-${{ matrix.browser }}
          restore-keys: |
            ${{ runner.os }}-ms-playwright-${{ steps.pw.outputs.version }}-


      - name: Install Playwright browsers
        run: npx playwright install ${{ matrix.browser }}


      - name: Resolve TAGS (default on push/PR)
        run: |
          if [ -n "${{ inputs.cucumber_tags }}" ]; then
            echo "TAGS=${{ inputs.cucumber_tags }}" >> $GITHUB_ENV
          else
            echo "TAGS=@humo" >> $GITHUB_ENV   # valor por defecto
          fi

      - name: Run tests (Cucumber)
        run: |
          echo "Browser=${{ matrix.browser }}  TEST_ENV=${TEST_ENV}  TAGS='${TAGS}'"
          if [ -n "$TAGS" ]; then
            npm run test:tag -- "$TAGS"
          else
            npm test
          fi

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ matrix.browser }}
          path: |
            src/reports/**
            src/test-results/**
            src/playwright-report/**
            src/traces/**
          if-no-files-found: warn
          retention-days: 10
